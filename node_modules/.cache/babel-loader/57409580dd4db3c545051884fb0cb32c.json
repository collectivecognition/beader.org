{"ast":null,"code":"import store from 'store';\nimport { apiPath } from './config';\nexport function get(path) {\n  return performRequest('get', path, null);\n}\nexport function post(path, body) {\n  return performRequest('post', path, body);\n}\n\nfunction performRequest(method, path, body) {\n  var token = store.get('token');\n  return window.fetch(\"\".concat(apiPath).concat(path), {\n    method: method,\n    body: body ? JSON.stringify(body) : null,\n    headers: new Headers({\n      'Authorization': \"Bearer \".concat(token),\n      'Content-Type': 'application/json'\n    })\n  }).then(function (response) {\n    return response.json();\n  });\n}","map":{"version":3,"sources":["/Users/will/Documents/beader.org/react/src/api.js"],"names":["store","apiPath","get","path","performRequest","post","body","method","token","window","fetch","JSON","stringify","headers","Headers","then","response","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAmB;AACtB,SAAOC,cAAc,CAAC,KAAD,EAAQD,IAAR,EAAc,IAAd,CAArB;AACH;AAED,OAAO,SAASE,IAAT,CAAcF,IAAd,EAAoBG,IAApB,EAA0B;AAC7B,SAAOF,cAAc,CAAC,MAAD,EAASD,IAAT,EAAeG,IAAf,CAArB;AACH;;AAED,SAASF,cAAT,CAAwBG,MAAxB,EAAgCJ,IAAhC,EAAsCG,IAAtC,EAA4C;AACxC,MAAME,KAAK,GAAGR,KAAK,CAACE,GAAN,CAAU,OAAV,CAAd;AAEA,SAAOO,MAAM,CAACC,KAAP,WAAgBT,OAAhB,SAA0BE,IAA1B,GAAkC;AACrCI,IAAAA,MAAM,EAANA,MADqC;AAErCD,IAAAA,IAAI,EAAEA,IAAI,GAAGK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAH,GAA0B,IAFC;AAGrCO,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACrB,wCAA2BN,KAA3B,CADqB;AAErB,sBAAiB;AAFI,KAAZ;AAH4B,GAAlC,EAQNO,IARM,CAQD,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GARP,CAAP;AASH","sourcesContent":["import store from 'store';\n\nimport { apiPath } from './config';\n\nexport function get(path) {\n    return performRequest('get', path, null);\n}\n\nexport function post(path, body) {\n    return performRequest('post', path, body);\n}\n\nfunction performRequest(method, path, body) {\n    const token = store.get('token');\n\n    return window.fetch(`${apiPath}${path}`, {\n        method,\n        body: body ? JSON.stringify(body) : null,\n        headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type' : 'application/json',\n        })\n    })\n    .then(response => response.json());\n}"]},"metadata":{},"sourceType":"module"}