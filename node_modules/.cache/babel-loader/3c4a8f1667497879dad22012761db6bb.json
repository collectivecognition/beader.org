{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactRouterDom = require('react-router-dom');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ReactRouterGA = function (_React$Component) {\n  _inherits(ReactRouterGA, _React$Component);\n\n  function ReactRouterGA(props) {\n    _classCallCheck(this, ReactRouterGA);\n\n    var _this = _possibleConstructorReturn(this, (ReactRouterGA.__proto__ || Object.getPrototypeOf(ReactRouterGA)).call(this, props));\n\n    _this.sendPageView = _this.sendPageView.bind(_this);\n    _this.initialize = _this.initialize.bind(_this);\n\n    _this.initialize(props.id);\n\n    return _this;\n  }\n\n  _createClass(ReactRouterGA, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.sendPageView(this.props.location);\n      this.props.history.listen(this.sendPageView);\n    }\n  }, {\n    key: 'initialize',\n    value: function initialize() {\n      if (!this.props.id) {\n        console.error('[react-router-ga] Tracking ID is required.');\n        return;\n      } // Load Google Analytics\n\n\n      (function (i, s, o, g, r, a, m) {\n        i['GoogleAnalyticsObject'] = r;\n        i[r] = i[r] || function () {\n          (i[r].q = i[r].q || []).push(arguments);\n        }, i[r].l = 1 * new Date();\n        a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n        a.async = 1;\n        a.src = g;\n        m.parentNode.insertBefore(a, m);\n      })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga'); // Initialize Google Analytics\n\n\n      window.ga('create', this.props.id, 'auto');\n      window.ga('send', 'pageview');\n    }\n  }, {\n    key: 'sendPageView',\n    value: function sendPageView(location) {\n      // Do nothing if GA was not initialized due to a missing tracking ID.\n      if (!window.ga) {\n        return;\n      } // Do nothing if trackPathnameOnly is enabled and the pathname didn't change.\n\n\n      if (this.props.trackPathnameOnly && location.pathname === this.lastPathname) {\n        return;\n      }\n\n      this.lastPathname = location.pathname; // Sets the page value on the tracker.\n\n      window.ga('set', 'page', location.pathname); // Sending the pageview no longer requires passing the page\n      // value since it's now stored on the tracker object.\n\n      window.ga('send', 'pageview');\n\n      if (this.props.debug) {\n        console.info('[react-router-ga] Page view: ' + location.pathname);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return ReactRouterGA;\n}(React.Component);\n\nReactRouterGA.defaultProps = {\n  debug: false\n};\nexports.default = (0, _reactRouterDom.withRouter)(ReactRouterGA);","map":null,"metadata":{},"sourceType":"script"}